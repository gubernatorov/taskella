'use client'

import { createContext, useContext, useEffect, useState } from 'react'
import { User, AuthResponse } from '@/types/auth'
import { authApi, DevAuthRequest } from '@/lib/api/auth'

interface AuthContextType {
  user: User | null
  token: string | null
  isLoading: boolean
  isInitialized: boolean
  login: (initData: string) => Promise<void>
  devLogin: (userData: DevAuthRequest['user']) => Promise<void>
  logout: () => void
}

const AuthContext = createContext<AuthContextType | null>(null)

export function AuthProvider({ children }: { children: React.ReactNode }) {
  const [user, setUser] = useState<User | null>(null)
  const [token, setToken] = useState<string | null>(null)
  const [isLoading, setIsLoading] = useState(true)
  const [hasInitialized, setHasInitialized] = useState(false)
  const [isInitialized, setIsInitialized] = useState(false)

  // –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º isLoading –≤ false –ø–æ—Å–ª–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  // —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ UI –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false)
      console.log('üîÑ AuthProvider: isLoading set to false after timeout')
    }, 100)
    
    return () => clearTimeout(timer)
  }, [])

  useEffect(() => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (hasInitialized) return

    const initAuth = async () => {
      console.log('üîÑ AuthProvider initAuth started')
      setHasInitialized(true)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      const authInProgress = typeof window !== 'undefined' ? sessionStorage.getItem('auth_in_progress') === 'true' : false
      if (authInProgress) {
        console.log('üé´ Authentication in progress, skipping validation')
        setIsLoading(false)
        return
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ —á—Ç–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
      const justAuthenticated = typeof window !== 'undefined' ? sessionStorage.getItem('just_authenticated') === 'true' : false
      if (justAuthenticated) {
        console.log('üé´ User just authenticated, skipping validation')
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
        const savedToken = localStorage.getItem('auth_token')
        if (savedToken) {
          setToken(savedToken)
          // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è
          try {
            const user = await authApi.getMe()
            setUser(user)
          } catch (error) {
            console.log('‚ö†Ô∏è Could not load user data, will retry later')
          }
        }
        setIsLoading(false)
        setIsInitialized(true)
        return
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ Telegram WebApp
      const isTelegramApp = typeof window !== 'undefined' && window.Telegram?.WebApp?.initData
      
      // –ï—Å–ª–∏ –º—ã –≤ Telegram WebApp –∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å
      // –ü—É—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
      if (isTelegramApp && !localStorage.getItem('auth_token')) {
        console.log('üì± Telegram WebApp detected without token, skipping validation')
        setIsLoading(false)
        setIsInitialized(true)
        return
      }
      
      // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω-—Ä–µ–∂–∏–º–∞: –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏ —ç—Ç–æ –Ω–µ Telegram WebApp,
      // —Å—Ä–∞–∑—É –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
      if (!localStorage.getItem('auth_token') && !isTelegramApp && process.env.NODE_ENV === 'production') {
        console.log('üåê Production mode: no token found, marking as initialized to prevent redirect loop')
        setIsLoading(false)
        setIsInitialized(true)
        return
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      const savedToken = localStorage.getItem('auth_token')
      console.log('üîç Saved token exists:', !!savedToken)
      
      if (savedToken) {
        setToken(savedToken)
        console.log('‚úÖ Token set in state')
        
        try {
          // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          console.log('üîç Validating token with API...')
          const user = await authApi.getMe()
          console.log('‚úÖ User loaded successfully:', user?.id)
          setUser(user)
        } catch (error: any) {
          console.error('‚ùå Auth validation error:', error)
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—à–∏–±–∫–æ–π "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
          // –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –ë–î –∏–ª–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
          if (error?.message === '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' || error?.code === 'USER_NOT_FOUND') {
            console.log('üßπ User not found in database, clearing token and user state')
            // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            localStorage.removeItem('auth_token')
            setToken(null)
            setUser(null)
          } else if (error?.code === 'NETWORK_ERROR' || error?.isNetworkError ||
                    (error?.message && (error.message.includes('Failed to fetch') ||
                                      error.message.includes('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞')))) {
            // –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            console.log('üåê API unavailable, keeping token for retry')
            // –ù–µ –æ—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω, –ø—Ä–æ—Å—Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º isLoading –≤ false
            // –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
          } else {
            // –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
            console.log('üßπ Other validation error, clearing token')
            localStorage.removeItem('auth_token')
            setToken(null)
            setUser(null)
          }
        }
      } else {
        console.log('üìù No saved token found')
      }
      
      console.log('‚úÖ AuthProvider initialization complete, setting isLoading to false')
      setIsLoading(false)
      setIsInitialized(true)
    }

    initAuth()
  }, [hasInitialized])

  const login = async (initData: string) => {
    const timestamp = new Date().toISOString()
    console.log(`üîê [${timestamp}] LOGIN PROCESS START`)
    console.log(`  - InitData length: ${initData.length}`)
    console.log(`  - InitData preview: ${initData.substring(0, 100) + '...'}`)
    
    try {
      console.log(`üì° [${timestamp}] Calling auth API...`)
      const response = await authApi.login({ initData })
      
      console.log(`‚úÖ [${timestamp}] LOGIN SUCCESS:`)
      console.log(`  - User ID: ${response.user.id}`)
      console.log(`  - Username: ${response.user.username || 'N/A'}`)
      console.log(`  - Token length: ${response.token.length}`)
      
      setUser(response.user)
      setToken(response.token)
      localStorage.setItem('auth_token', response.token)
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      if (typeof window !== 'undefined') {
        document.cookie = `auth_token=${response.token}; path=/; max-age=2592000; secure; samesite=lax`
        console.log(`üç™ [${timestamp}] Cookie set for auth token`)
        sessionStorage.setItem('just_authenticated', 'true')
        console.log(`üé´ [${timestamp}] Just authenticated flag set`)
        
        // –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–æ–≤
        setTimeout(() => {
          sessionStorage.removeItem('just_authenticated')
          console.log(`üßπ [${timestamp}] Just authenticated flag cleared after timeout`)
        }, 2000)
      }
    } catch (error: any) {
      const errorTimestamp = new Date().toISOString()
      console.error(`‚ùå [${errorTimestamp}] LOGIN ERROR:`)
      console.error(`  - Error Type: ${error?.constructor?.name || 'Unknown'}`)
      console.error(`  - Error Message: ${error?.message || 'Unknown error'}`)
      console.error(`  - Error Code: ${error?.code || 'No code'}`)
      console.error(`  - Error Stack: ${error?.stack || 'No stack trace'}`)
      throw error
    }
  }

  const devLogin = async (userData: DevAuthRequest['user']) => {
    const timestamp = new Date().toISOString()
    console.log(`üîê [${timestamp}] DEV LOGIN PROCESS START`)
    console.log(`  - User Data:`, userData)
    
    try {
      console.log(`üì° [${timestamp}] Calling dev auth API...`)
      const response = await authApi.devLogin({ user: userData })
      
      console.log(`‚úÖ [${timestamp}] DEV LOGIN SUCCESS:`)
      console.log(`  - User ID: ${response.user.id}`)
      console.log(`  - Username: ${response.user.username || 'N/A'}`)
      console.log(`  - Token length: ${response.token.length}`)
      
      setUser(response.user)
      setToken(response.token)
      localStorage.setItem('auth_token', response.token)
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      if (typeof window !== 'undefined') {
        document.cookie = `auth_token=${response.token}; path=/; max-age=2592000; secure; samesite=lax`
        console.log(`üç™ [${timestamp}] Cookie set for auth token`)
        sessionStorage.setItem('just_authenticated', 'true')
        console.log(`üé´ [${timestamp}] Just authenticated flag set`)
        
        // –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–æ–≤
        setTimeout(() => {
          sessionStorage.removeItem('just_authenticated')
          console.log(`üßπ [${timestamp}] Just authenticated flag cleared after timeout`)
        }, 2000)
      }
    } catch (error: any) {
      const errorTimestamp = new Date().toISOString()
      console.error(`‚ùå [${errorTimestamp}] DEV LOGIN ERROR:`)
      console.error(`  - Error Type: ${error?.constructor?.name || 'Unknown'}`)
      console.error(`  - Error Message: ${error?.message || 'Unknown error'}`)
      console.error(`  - Error Code: ${error?.code || 'No code'}`)
      console.error(`  - Error Stack: ${error?.stack || 'No stack trace'}`)
      throw error
    }
  }

  const logout = () => {
    const timestamp = new Date().toISOString()
    console.log(`üö™ [${timestamp}] LOGOUT PROCESS START`)
    
    setUser(null)
    setToken(null)
    localStorage.removeItem('auth_token')
    
    // –û—á–∏—â–∞–µ–º cookie
    if (typeof window !== 'undefined') {
      document.cookie = 'auth_token=; path=/; max-age=0; secure; samesite=lax'
      console.log(`üç™ [${timestamp}] Cookie cleared`)
      // –û—á–∏—â–∞–µ–º –≤—Å–µ —Ñ–ª–∞–≥–∏ —Å–µ—Å—Å–∏–∏
      sessionStorage.removeItem('just_authenticated')
      sessionStorage.removeItem('auth_in_progress')
    }
    
    console.log(`‚úÖ [${timestamp}] LOGOUT COMPLETED`)
    console.log(`  - User state cleared`)
    console.log(`  - Token state cleared`)
    console.log(`  - LocalStorage cleared`)
    console.log(`  - Cookie cleared`)
    console.log(`  - Session flags cleared`)
  }

  return (
    <AuthContext.Provider value={{ user, token, isLoading, isInitialized, login, devLogin, logout }}>
      {children}
    </AuthContext.Provider>
  )
}

export function useAuthContext() {
  const context = useContext(AuthContext)
  if (!context) {
    throw new Error('useAuthContext must be used within AuthProvider')
  }
  return context
}
