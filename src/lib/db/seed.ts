import { db } from './connection'
import { users, projects, tasks, projectMembers } from './schema'
import { v4 as uuidv4 } from 'uuid'

export async function seedDatabase() {
  console.log('üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...')

  try {
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ ID
    const userData = [
      {
        id: '1',
        telegramId: 123456789,
        firstName: '–ò–≤–∞–Ω',
        lastName: '–ü–µ—Ç—Ä–æ–≤',
        username: 'ivan_petrov',
        avatarUrl: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face',
      },
      {
        id: '2',
        telegramId: 987654321,
        firstName: '–ú–∞—Ä–∏—è',
        lastName: '–°–∏–¥–æ—Ä–æ–≤–∞',
        username: 'maria_s',
        avatarUrl: 'https://images.unsplash.com/photo-1494790108755-2616b25fa2e5?w=100&h=100&fit=crop&crop=face',
      }
    ]

    await db.insert(users).values(userData)
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã')

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    const projectData = [
      {
        id: uuidv4(),
        name: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏',
        key: 'MOBILE',
        status: 'active' as const,
        ownerId: userData[0].id,
      },
      {
        id: uuidv4(),
        name: '–í–µ–±-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
        key: 'WEB',
        status: 'active' as const,
        ownerId: userData[1].id,
      },
      {
        id: uuidv4(),
        name: 'API —Å–µ—Ä–≤–∏—Å—ã',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã',
        key: 'API',
        status: 'active' as const,
        ownerId: userData[0].id,
      }
    ]

    await db.insert(projects).values(projectData)
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã')

    // –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤
    const memberData = [
      {
        id: uuidv4(),
        projectId: projectData[0].id,
        userId: userData[0].id,
        role: 'owner' as const,
      },
      {
        id: uuidv4(),
        projectId: projectData[0].id,
        userId: userData[1].id,
        role: 'developer' as const,
      },
      {
        id: uuidv4(),
        projectId: projectData[1].id,
        userId: userData[1].id,
        role: 'owner' as const,
      },
      {
        id: uuidv4(),
        projectId: projectData[2].id,
        userId: userData[0].id,
        role: 'owner' as const,
      }
    ]

    await db.insert(projectMembers).values(memberData)
    console.log('‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã')

    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏
    const taskData = [
      {
        id: uuidv4(),
        key: 'MOBILE-1',
        title: '–°–æ–∑–¥–∞—Ç—å –¥–∏–∑–∞–π–Ω –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∏–∑–∞–π–Ω –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è –∫–æ–º–ø–∞–Ω–∏–∏.',
        status: 'in_progress' as const,
        priority: 'high' as const,
        type: 'task' as const,
        projectId: projectData[0].id,
        assigneeId: userData[1].id,
        reporterId: userData[0].id,
        estimatedHours: 8,
        loggedHours: 4,
        dueDate: '2024-08-15',
      },
      {
        id: uuidv4(),
        key: 'MOBILE-2',
        title: '–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π',
        description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥—É—Ç –≤–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram.',
        status: 'todo' as const,
        priority: 'highest' as const,
        type: 'bug' as const,
        projectId: projectData[0].id,
        assigneeId: userData[0].id,
        reporterId: userData[1].id,
        estimatedHours: 2,
        dueDate: '2024-08-12',
      },
      {
        id: uuidv4(),
        key: 'WEB-1',
        title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –ø–ª–∞—Ç–µ–∂–µ–π',
        description: '–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫.',
        status: 'in_review' as const,
        priority: 'medium' as const,
        type: 'feature' as const,
        projectId: projectData[1].id,
        assigneeId: userData[0].id,
        reporterId: userData[1].id,
        estimatedHours: 16,
        loggedHours: 14,
        dueDate: '2024-08-20',
      },
      {
        id: uuidv4(),
        key: 'API-1',
        title: '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API',
        description: '–°–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è REST API —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.',
        status: 'in_progress' as const,
        priority: 'low' as const,
        type: 'task' as const,
        projectId: projectData[2].id,
        assigneeId: userData[0].id,
        reporterId: userData[0].id,
        estimatedHours: 12,
        loggedHours: 3,
        dueDate: '2024-08-25',
      }
    ]

    await db.insert(tasks).values(taskData)
    console.log('‚úÖ –ó–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω—ã')

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
    throw error
  }
}