import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export function middleware(request: NextRequest) {
  // –°–µ—Ä–≤–µ—Ä–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  const timestamp = new Date().toISOString()
  const method = request.method
  const url = request.nextUrl.pathname
  const searchParams = request.nextUrl.search.toString()
  const userAgent = request.headers.get('user-agent') || 'Unknown'
  const referer = request.headers.get('referer') || 'Direct'
  
  console.log(`üåê [${timestamp}] ${method} ${url}${searchParams ? '?' + searchParams : ''}`)
  console.log(`üì± User-Agent: ${userAgent}`)
  console.log(`üîó Referer: ${referer}`)
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å–æ–º –∫ API –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (request.nextUrl.pathname.startsWith('/api/auth')) {
    console.log(`üîê Auth API request detected: ${url}`)
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ —Ç–æ, —á—Ç–æ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const requestHeaders = new Headers(request.headers)
    requestHeaders.set('x-auth-request', 'true')
    
    return NextResponse.next({
      request: {
        headers: requestHeaders,
      },
    })
  }
  
  // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
  if (url.startsWith('/dashboard') || url.startsWith('/tasks') || url.startsWith('/projects')) {
    console.log(`üõ°Ô∏è Protected page access: ${url}`)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const authHeader = request.headers.get('authorization')
    const cookieHeader = request.headers.get('cookie')
    
    console.log(`üîë Auth Header: ${authHeader ? 'Present' : 'Missing'}`)
    console.log(`üç™ Cookie Header: ${cookieHeader ? 'Present' : 'Missing'}`)
    
    let hasAuthToken = false
    if (cookieHeader) {
      hasAuthToken = cookieHeader.includes('auth_token')
      console.log(`üé´ Auth Token in Cookie: ${hasAuthToken ? 'Present' : 'Missing'}`)
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –≤ cookie, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –±–µ–∑ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if (hasAuthToken) {
      console.log(`‚úÖ Auth token found in cookie, allowing access...`)
      return NextResponse.next()
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å
    if (authHeader) {
      console.log(`‚úÖ Auth header found, allowing access...`)
      return NextResponse.next()
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å–æ–º –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞
    // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    if (url === '/' || url === '/login') {
      console.log(`üîÑ Skipping redirect for ${url} page...`)
      return NextResponse.next()
    }
    
    // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω-—Ä–µ–∂–∏–º–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º User-Agent –¥–ª—è Telegram
    const userAgent = request.headers.get('user-agent') || ''
    const isTelegram = userAgent.includes('Telegram') || userAgent.includes('t.me')
    
    // –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–ª—è Telegram Mini Apps –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    // –í—Å—è –ª–æ–≥–∏–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ
    if (isTelegram) {
      console.log(`üì± Telegram request detected, bypassing server-side auth check...`)
      return NextResponse.next()
    }
    
    // –î–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, —á—Ç–æ–±—ã –ø–æ–∑–≤–æ–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    if (url.startsWith('/api/')) {
      console.log(`üîÑ API request detected, allowing access...`)
      return NextResponse.next()
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –Ω–∏ –≤ cookie, –Ω–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    // (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ-Telegram –∑–∞–ø—Ä–æ—Å–æ–≤)
    console.log(`üîÑ No auth token found, redirecting to login...`)
    return NextResponse.redirect(new URL('/login', request.url))
  }
  
  return NextResponse.next()
}

export const config = {
  matcher: [
    '/api/:path*',
    '/((?!_next/static|_next/image|favicon.ico).*)',
  ],
}
