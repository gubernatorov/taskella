'use client'

import { List, Section, Cell, Button } from '@telegram-apps/telegram-ui'
import { useProjects } from '@/lib/hooks/useProjects'
import { useTasks } from '@/lib/hooks/useTasks'
import { Plus, FolderOpen, CheckSquare, ArrowRight } from 'lucide-react'
import { useRouter } from 'next/navigation'

export default function DashboardPage() {
  const { data: projects } = useProjects({ limit: 3 })
  const { data: tasks } = useTasks({ limit: 5, status: 'in_progress' })
  const router = useRouter()

  return (
    <List>
      <Section header="–î–∞—à–±–æ—Ä–¥" footer="–û–±–∑–æ—Ä –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∑–∞–¥–∞—á">
        <Cell
          before={<div style={{ color: 'var(--tg-theme-accent-text-color, #3390ec)' }}>üìä</div>}
          subtitle="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Taskella"
        >
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏
        </Cell>
      </Section>

      <Section
        header="–ù–µ–¥–∞–≤–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã"
        footer={`–ü–æ–∫–∞–∑–∞–Ω–æ ${projects?.length || 0} –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤`}
      >
        {projects?.map((project) => (
          <Cell
            key={project.id}
            before={<FolderOpen size={20} style={{ color: 'var(--tg-theme-accent-text-color, #3390ec)' }} />}
            after={<ArrowRight size={16} />}
            subtitle={project.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}
            onClick={() => router.push(`/projects/${project.id}`)}
          >
            {project.name}
          </Cell>
        ))}
        
        <Cell
          before={<Plus size={20} />}
          onClick={() => router.push('/projects/new')}
        >
          –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
        </Cell>
        
        <Cell
          before={<ArrowRight size={20} />}
          onClick={() => router.push('/projects')}
        >
          –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
        </Cell>
      </Section>

      <Section
        header="–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏"
        footer={`–ü–æ–∫–∞–∑–∞–Ω–æ ${tasks?.length || 0} –∑–∞–¥–∞—á –≤ —Ä–∞–±–æ—Ç–µ`}
      >
        {tasks?.map((task) => (
          <Cell
            key={task.id}
            before={<CheckSquare size={20} style={{ color: 'var(--tg-theme-accent-text-color, #3390ec)' }} />}
            after={<ArrowRight size={16} />}
            subtitle={`–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${task.priority || 'normal'}`}
            onClick={() => router.push(`/tasks/${task.id}`)}
          >
            {task.title}
          </Cell>
        ))}
        
        <Cell
          before={<Plus size={20} />}
          onClick={() => router.push('/tasks/new')}
        >
          –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
        </Cell>
        
        <Cell
          before={<ArrowRight size={20} />}
          onClick={() => router.push('/tasks')}
        >
          –í—Å–µ –∑–∞–¥–∞—á–∏
        </Cell>
      </Section>
    </List>
  )
}